/* AUTOGENERATED FILE. DO NOT EDIT. */
#ifndef _MOCK_ESP_SYSTEM_H
#define _MOCK_ESP_SYSTEM_H

#include "unity.h"
#include "esp_system.h"

/* Ignore the following warnings, since we are copying code */
#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic push
#endif
#if !defined(__clang__)
#pragma GCC diagnostic ignored "-Wpragmas"
#endif
#pragma GCC diagnostic ignored "-Wunknown-pragmas"
#pragma GCC diagnostic ignored "-Wduplicate-decl-specifier"
#endif

void mock_esp_system_Init(void);
void mock_esp_system_Destroy(void);
void mock_esp_system_Verify(void);




#define vTaskDelay_Ignore() vTaskDelay_CMockIgnore()
void vTaskDelay_CMockIgnore(void);
#define vTaskDelay_StopIgnore() vTaskDelay_CMockStopIgnore()
void vTaskDelay_CMockStopIgnore(void);
#define vTaskDelay_Expect(i) vTaskDelay_CMockExpect(__LINE__, i)
void vTaskDelay_CMockExpect(UNITY_LINE_TYPE cmock_line, int i);
typedef void (* CMOCK_vTaskDelay_CALLBACK)(int i, int cmock_num_calls);
void vTaskDelay_AddCallback(CMOCK_vTaskDelay_CALLBACK Callback);
void vTaskDelay_Stub(CMOCK_vTaskDelay_CALLBACK Callback);
#define vTaskDelay_StubWithCallback vTaskDelay_Stub
#define xTaskGetTickCount_IgnoreAndReturn(cmock_retval) xTaskGetTickCount_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCount_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define xTaskGetTickCount_StopIgnore() xTaskGetTickCount_CMockStopIgnore()
void xTaskGetTickCount_CMockStopIgnore(void);
#define xTaskGetTickCount_ExpectAndReturn(cmock_retval) xTaskGetTickCount_CMockExpectAndReturn(__LINE__, cmock_retval)
void xTaskGetTickCount_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
typedef int (* CMOCK_xTaskGetTickCount_CALLBACK)(int cmock_num_calls);
void xTaskGetTickCount_AddCallback(CMOCK_xTaskGetTickCount_CALLBACK Callback);
void xTaskGetTickCount_Stub(CMOCK_xTaskGetTickCount_CALLBACK Callback);
#define xTaskGetTickCount_StubWithCallback xTaskGetTickCount_Stub
#define pdMS_TO_TICKS_IgnoreAndReturn(cmock_retval) pdMS_TO_TICKS_CMockIgnoreAndReturn(__LINE__, cmock_retval)
void pdMS_TO_TICKS_CMockIgnoreAndReturn(UNITY_LINE_TYPE cmock_line, int cmock_to_return);
#define pdMS_TO_TICKS_StopIgnore() pdMS_TO_TICKS_CMockStopIgnore()
void pdMS_TO_TICKS_CMockStopIgnore(void);
#define pdMS_TO_TICKS_ExpectAndReturn(ms, cmock_retval) pdMS_TO_TICKS_CMockExpectAndReturn(__LINE__, ms, cmock_retval)
void pdMS_TO_TICKS_CMockExpectAndReturn(UNITY_LINE_TYPE cmock_line, int ms, int cmock_to_return);
typedef int (* CMOCK_pdMS_TO_TICKS_CALLBACK)(int ms, int cmock_num_calls);
void pdMS_TO_TICKS_AddCallback(CMOCK_pdMS_TO_TICKS_CALLBACK Callback);
void pdMS_TO_TICKS_Stub(CMOCK_pdMS_TO_TICKS_CALLBACK Callback);
#define pdMS_TO_TICKS_StubWithCallback pdMS_TO_TICKS_Stub

#if defined(__GNUC__) && !defined(__ICC) && !defined(__TMS470__)
#if __GNUC__ > 4 || (__GNUC__ == 4 && (__GNUC_MINOR__ > 6 || (__GNUC_MINOR__ == 6 && __GNUC_PATCHLEVEL__ > 0)))
#pragma GCC diagnostic pop
#endif
#endif

#endif
